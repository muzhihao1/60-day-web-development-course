---
import BaseLayout from '@layouts/BaseLayout.astro';
import { phases } from '@lib/navigation';

// Get the day number from the URL
const { day } = Astro.params;
const dayNumber = parseInt(day);

// Validate day number
if (!day || isNaN(dayNumber) || dayNumber < 1 || dayNumber > 60) {
  return Astro.redirect('/404');
}

// Find which phase this day belongs to
const currentPhase = phases.find(phase => phase.days.includes(dayNumber));
if (!currentPhase) {
  return Astro.redirect('/404');
}

// Define static paths for all 60 days
export function getStaticPaths() {
  return Array.from({ length: 60 }, (_, i) => ({
    params: { day: String(i + 1) }
  }));
}

// Mock content for demonstration - In production, this would come from MDX files or a CMS
const dayContent = {
  1: {
    title: 'Git与版本控制基础',
    description: '学习Git的基本概念和命令，掌握版本控制的核心技能',
    objectives: [
      '理解版本控制的概念和重要性',
      '掌握Git的基本命令',
      '学会使用GitHub进行代码托管',
      '了解团队协作的基本流程'
    ],
    overview: 'Git是现代软件开发中最重要的工具之一。今天我们将学习Git的基础知识，理解版本控制的核心概念，并实际操作Git的常用命令。',
    sections: [
      {
        title: '核心概念',
        subsections: [
          {
            title: '什么是版本控制？',
            content: '版本控制是一种记录文件内容变化，以便将来查阅特定版本修订情况的系统。它让你能够：',
            list: [
              '追踪代码的历史变更',
              '回退到之前的版本',
              '多人协作开发',
              '管理不同的功能分支'
            ]
          }
        ]
      },
      {
        title: '详细讲解',
        subsections: [
          {
            title: 'Git的工作原理',
            content: 'Git使用三个主要区域来管理文件：',
            orderedList: [
              '工作区（Working Directory）：你实际编辑文件的地方',
              '暂存区（Staging Area）：准备提交的文件集合',
              '本地仓库（Local Repository）：Git保存项目历史的地方'
            ]
          }
        ]
      }
    ]
  }
};

// Get content for current day (with fallback)
const content = dayContent[dayNumber] || {
  title: `Day ${dayNumber} - 课程内容`,
  description: '课程内容正在准备中...',
  objectives: ['课程目标即将发布'],
  overview: '本课程内容正在紧张准备中，请稍后查看。',
  sections: []
};

const title = `Day ${dayNumber} - ${content.title}`;
---

<BaseLayout title={title} description={content.description} currentDay={dayNumber}>
  <article class="day-content">
    <header class="content-header">
      <h1>{title}</h1>
      <p class="content-description">{content.description}</p>
      
      <div class="learning-objectives">
        <h2>学习目标</h2>
        <ul>
          {content.objectives.map(objective => (
            <li>{objective}</li>
          ))}
        </ul>
      </div>
    </header>

    <section id="overview" class="content-section">
      <h2>今日概览</h2>
      <p>{content.overview}</p>
    </section>

    {content.sections.map((section, sectionIndex) => (
      <section id={`section-${sectionIndex}`} class="content-section">
        <h2>{section.title}</h2>
        {section.subsections?.map((subsection, subIndex) => (
          <div key={`${sectionIndex}-${subIndex}`}>
            <h3>{subsection.title}</h3>
            <p>{subsection.content}</p>
            {subsection.list && (
              <ul>
                {subsection.list.map(item => <li>{item}</li>)}
              </ul>
            )}
            {subsection.orderedList && (
              <ol>
                {subsection.orderedList.map(item => (
                  <li><strong>{item.split('：')[0]}：</strong>{item.split('：')[1]}</li>
                ))}
              </ol>
            )}
          </div>
        ))}
      </section>
    ))}

    <div class="next-steps">
      <h2>下一步</h2>
      <p>完成今天的学习后，请前往：</p>
      <div class="nav-cards">
        <a href={`/day-${dayNumber}/code`} class="nav-card">
          <span class="nav-card-icon">💻</span>
          <h3>查看代码示例</h3>
          <p>学习实际代码的使用</p>
        </a>
        <a href={`/day-${dayNumber}/exercise`} class="nav-card">
          <span class="nav-card-icon">✍️</span>
          <h3>完成练习</h3>
          <p>动手实践今天学到的知识</p>
        </a>
      </div>
    </div>
  </article>
</BaseLayout>

<style>
  .day-content {
    max-width: 800px;
    margin: 0 auto;
  }

  .content-header {
    margin-bottom: 3rem;
  }

  .content-header h1 {
    font-size: 2.5rem;
    color: var(--color-text);
    margin-bottom: 1rem;
  }

  .content-description {
    font-size: 1.25rem;
    color: var(--color-text-secondary);
    margin-bottom: 2rem;
  }

  .learning-objectives {
    background: var(--color-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: 1.5rem;
  }

  .learning-objectives h2 {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    color: var(--color-primary);
  }

  .learning-objectives ul {
    list-style: none;
    padding: 0;
  }

  .learning-objectives li {
    padding-left: 1.5rem;
    margin-bottom: 0.5rem;
    position: relative;
  }

  .learning-objectives li::before {
    content: "✓";
    position: absolute;
    left: 0;
    color: var(--color-primary);
    font-weight: bold;
  }

  .content-section {
    margin-bottom: 3rem;
  }

  .content-section h2 {
    font-size: 1.75rem;
    margin-bottom: 1rem;
    color: var(--color-text);
  }

  .content-section h3 {
    font-size: 1.25rem;
    margin: 1.5rem 0 0.75rem;
    color: var(--color-text);
  }

  .content-section p {
    line-height: 1.7;
    color: var(--color-text-secondary);
    margin-bottom: 1rem;
  }

  .content-section ul,
  .content-section ol {
    margin: 1rem 0;
    padding-left: 2rem;
    color: var(--color-text-secondary);
  }

  .content-section li {
    margin-bottom: 0.5rem;
    line-height: 1.7;
  }

  .next-steps {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid var(--color-border);
  }

  .next-steps h2 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  .nav-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-top: 1.5rem;
  }

  .nav-card {
    background: var(--color-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: 1.5rem;
    text-decoration: none;
    transition: all 0.3s;
  }

  .nav-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
    border-color: var(--color-primary);
  }

  .nav-card-icon {
    font-size: 2rem;
    display: block;
    margin-bottom: 0.75rem;
  }

  .nav-card h3 {
    font-size: 1.125rem;
    color: var(--color-text);
    margin-bottom: 0.5rem;
  }

  .nav-card p {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
  }
</style>