---
/**
 * 解决方案页面模板
 * 展示每日练习的参考解决方案
 */
import { getCollection } from 'astro:content'
import BaseLayout from '@layouts/BaseLayout.astro'
import type { Solution, PhaseInfo } from '../../../types'
import { components } from '@components/mdx-components'

export async function getStaticPaths() {
  const solutions = await getCollection('solutions')
  const courses = await getCollection('courses')
  const exercises = await getCollection('exercises')
  const phases = await getCollection('phases')
  
  return solutions.map((solution) => {
    const course = courses.find(c => c.data.day === solution.data.day)
    const exercise = exercises.find(e => e.data.day === solution.data.day)
    const phase = phases.find(p => p.id.includes(course?.data.phase))
    
    return {
      params: { day: solution.data.day.toString() },
      props: { solution, course, exercise, phase }
    }
  })
}

const { day } = Astro.params
const { solution, course, exercise, phase } = Astro.props

const pageTitle = `解决方案 - Day ${day}: ${solution.data.exerciseTitle} | 60天Web开发课程`
const pageDescription = `Day ${day} 练习的参考解决方案：${solution.data.approach}`

// Get the Content component from the solution
const { Content } = await solution.render()
---

<BaseLayout title={pageTitle} description={pageDescription} currentDay={parseInt(day)}>
  <div class="solution-page-wrapper">
    <div class="solution-container">

    <!-- 面包屑导航 -->
    <nav class="breadcrumb" aria-label="面包屑导航">
      <ol>
        <li><a href="/">首页</a></li>
        <li><a href="/course">课程总览</a></li>
        <li><a href={`/course/day-${day}`}>Day {day}</a></li>
        <li><a href={`/course/day-${day}/exercise`}>练习</a></li>
        <li class="current">解决方案</li>
      </ol>
    </nav>

    <!-- 解决方案头部 -->
    <header class="solution-header">
      <div class="solution-meta">
        <span class="phase-badge">{phase?.data.name || '现代Web基础'}</span>
        <span class="solution-badge">参考解决方案</span>
        <span class="approach-badge">思路解析</span>
      </div>
      
      <div class="day-indicator">Day {day} 解决方案</div>
      
      <h1 class="solution-title">{solution.data.exerciseTitle}</h1>
      
      <div class="solution-approach">
        <h2>💡 解决思路</h2>
        <p>{solution.data.approach}</p>
      </div>
    </header>

    <!-- 关键要点 -->
    <section class="key-takeaways">
      <h2>🎯 关键要点</h2>
      <div class="takeaways-list">
        {solution.data.keyTakeaways.map((takeaway, index) => (
          <div class="takeaway-item">
            <span class="takeaway-number">{index + 1}</span>
            <span class="takeaway-text">{takeaway}</span>
          </div>
        ))}
      </div>
    </section>

    <!-- 解决方案内容 -->
    <article class="solution-content">
      <h2>📝 详细解释</h2>
      <Content components={components} />
    </article>

    <!-- 常见错误 -->
    {solution.data.commonMistakes && solution.data.commonMistakes.length > 0 && (
      <section class="common-mistakes">
        <h2>⚠️ 常见错误</h2>
        <div class="mistakes-list">
          {solution.data.commonMistakes.map((mistake, index) => (
            <div class="mistake-item">
              <div class="mistake-icon">⚠️</div>
              <div class="mistake-content">
                <h3>错误 {index + 1}</h3>
                <p>{mistake}</p>
              </div>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- 扩展练习 -->
    {solution.data.extensions && solution.data.extensions.length > 0 && (
      <section class="extensions">
        <h2>🚀 扩展练习</h2>
        <div class="extensions-list">
          {solution.data.extensions.map((extension, index) => (
            <div class="extension-item">
              <div class="extension-icon">🎯</div>
              <div class="extension-content">
                <h3>扩展 {index + 1}</h3>
                <p>{extension}</p>
              </div>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- 导航按钮 -->
    <nav class="solution-navigation">
      <a href={`/course/day-${day}/exercise`} class="nav-back">
        ← 返回练习
      </a>
      
      <a href={`/course/day-${day}`} class="nav-course">
        返回课程 →
      </a>
    </nav>

    <!-- 进度追踪 -->
    <div class="progress-tracker">
      <button class="btn btn-success mark-solution-complete" data-day={day}>
        标记解决方案为已查看
      </button>
    </div>

  </div>
  </div>

  <script>
    // 解决方案查看追踪脚本
    document.querySelector('.mark-solution-complete')?.addEventListener('click', (e) => {
      const day = (e.target as HTMLElement).dataset.day
      let viewedSolutions = []
      
      try {
        viewedSolutions = JSON.parse(localStorage.getItem('viewedSolutions') || '[]')
      } catch (error) {
        console.error('Error parsing viewedSolutions:', error)
        viewedSolutions = []
      }
      
      if (!viewedSolutions.includes(day)) {
        viewedSolutions.push(day)
        localStorage.setItem('viewedSolutions', JSON.stringify(viewedSolutions))
        ;(e.target as HTMLElement).textContent = '✓ 已查看解决方案'
        ;(e.target as HTMLElement).classList.add('completed')
      }
    })

    // 检查解决方案是否已查看
    let viewedSolutions = []
    try {
      viewedSolutions = JSON.parse(localStorage.getItem('viewedSolutions') || '[]')
    } catch (error) {
      console.error('Error parsing viewedSolutions:', error)
      viewedSolutions = []
    }
    
    const currentDay = document.querySelector('.mark-solution-complete')?.getAttribute('data-day')
    
    if (viewedSolutions.includes(currentDay)) {
      const btn = document.querySelector('.mark-solution-complete') as HTMLElement
      if (btn) {
        btn.textContent = '✓ 已查看解决方案'
        btn.classList.add('completed')
      }
    }
  </script>

  <style>
    .solution-page-wrapper {
      max-width: 1000px;
      margin: 0 auto;
      padding: 0 2rem;
    }

    .solution-container {
      max-width: 100%;
    }

    /* 面包屑导航 */
    .breadcrumb {
      margin-bottom: 2rem;
    }

    .breadcrumb ol {
      list-style: none;
      padding: 0;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 0.875rem;
      color: var(--color-text-secondary);
    }

    .breadcrumb li:not(.current)::after {
      content: '>';
      margin-left: 0.5rem;
      color: var(--color-border);
    }

    .breadcrumb a {
      color: var(--color-primary);
      text-decoration: none;
    }

    .breadcrumb a:hover {
      text-decoration: underline;
    }

    .breadcrumb .current {
      color: var(--color-text);
      font-weight: 500;
    }

    /* 解决方案头部 */
    .solution-header {
      margin-bottom: 3rem;
      padding-bottom: 2rem;
      border-bottom: 2px solid var(--color-border);
    }

    .solution-meta {
      display: flex;
      gap: 1rem;
      margin-bottom: 1rem;
      flex-wrap: wrap;
    }

    .phase-badge,
    .solution-badge,
    .approach-badge {
      padding: 0.5rem 1rem;
      border-radius: var(--radius-md);
      font-size: 0.875rem;
      font-weight: 600;
    }

    .phase-badge {
      background: var(--color-primary);
      color: white;
    }

    .solution-badge {
      background: var(--color-success);
      color: white;
    }

    .approach-badge {
      background: var(--color-bg-secondary);
      color: var(--color-text-secondary);
      border: 1px solid var(--color-border);
    }

    .day-indicator {
      color: var(--color-primary);
      font-size: 1rem;
      font-weight: 600;
      margin-bottom: 0.75rem;
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }

    .solution-title {
      font-size: 2.75rem;
      font-weight: 800;
      margin-bottom: 2rem;
      color: var(--color-text);
      line-height: 1.2;
    }

    .solution-approach {
      background: linear-gradient(135deg, var(--color-bg) 0%, var(--color-bg-secondary) 100%);
      border-radius: var(--radius-lg);
      padding: 2rem;
      border: 1px solid var(--color-border);
      position: relative;
      overflow: hidden;
    }

    .solution-approach::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 4px;
      background: linear-gradient(90deg, var(--color-primary), var(--color-success));
    }

    .solution-approach h2 {
      font-size: 1.25rem;
      margin-bottom: 1rem;
      color: var(--color-text);
      font-weight: 700;
    }

    .solution-approach p {
      font-size: 1.125rem;
      color: var(--color-text-secondary);
      line-height: 1.7;
      margin: 0;
    }

    /* 关键要点 */
    .key-takeaways {
      background: linear-gradient(135deg, var(--color-bg) 0%, var(--color-bg-secondary) 100%);
      border-radius: var(--radius-lg);
      padding: 2.5rem;
      margin-bottom: 3rem;
      border: 1px solid var(--color-border);
      position: relative;
      overflow: hidden;
    }

    .key-takeaways::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 4px;
      background: linear-gradient(90deg, var(--color-success), var(--color-primary));
    }

    .key-takeaways h2 {
      font-size: 1.5rem;
      margin-bottom: 1.5rem;
      color: var(--color-text);
      font-weight: 700;
    }

    .takeaways-list {
      display: grid;
      gap: 1rem;
    }

    .takeaway-item {
      display: flex;
      align-items: flex-start;
      gap: 1rem;
      padding: 1.25rem 1.5rem;
      background: var(--color-bg);
      border-radius: var(--radius-md);
      border: 1px solid var(--color-border);
      transition: all 0.2s ease;
    }

    .takeaway-item:hover {
      transform: translateX(5px);
      border-color: var(--color-success);
    }

    .takeaway-number {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 2rem;
      height: 2rem;
      background: var(--color-success);
      color: white;
      border-radius: 50%;
      font-weight: 700;
      font-size: 0.875rem;
      flex-shrink: 0;
    }

    .takeaway-text {
      color: var(--color-text-secondary);
      font-weight: 500;
      line-height: 1.6;
    }

    /* 解决方案内容 */
    .solution-content {
      background: var(--color-bg);
      border-radius: var(--radius-lg);
      padding: 3rem;
      margin-bottom: 3rem;
      line-height: 1.8;
      border: 1px solid var(--color-border);
    }

    .solution-content > *:first-child {
      margin-top: 0;
    }

    .solution-content > *:last-child {
      margin-bottom: 0;
    }

    .solution-content h2 {
      font-size: 1.75rem;
      margin: 2.5rem 0 1.5rem 0;
      color: var(--color-text);
      font-weight: 700;
      padding-bottom: 0.75rem;
      border-bottom: 2px solid var(--color-border);
    }

    .solution-content h3 {
      font-size: 1.375rem;
      margin: 2rem 0 1rem 0;
      color: var(--color-text);
      font-weight: 600;
    }

    .solution-content p {
      margin-bottom: 1.5rem;
      color: var(--color-text-secondary);
      line-height: 1.8;
    }

    .solution-content pre {
      background: var(--color-bg-secondary);
      border: 1px solid var(--color-border);
      border-radius: var(--radius-md);
      padding: 2rem 1.5rem;
      overflow-x: auto;
      margin: 2rem 0 2.5rem 0;
      position: relative;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .solution-content code {
      font-family: 'Consolas', 'Monaco', monospace;
      font-size: 0.875rem;
    }

    /* 常见错误 */
    .common-mistakes {
      margin-bottom: 3rem;
    }

    .common-mistakes h2 {
      font-size: 1.5rem;
      margin-bottom: 1.5rem;
      color: var(--color-text);
      font-weight: 700;
    }

    .mistakes-list {
      display: grid;
      gap: 1.5rem;
    }

    .mistake-item {
      display: flex;
      gap: 1rem;
      padding: 1.5rem;
      background: linear-gradient(135deg, #fef2f2 0%, #fefefe 100%);
      border: 1px solid #fecaca;
      border-radius: var(--radius-lg);
      transition: all 0.2s ease;
    }

    .mistake-item:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(239, 68, 68, 0.1);
    }

    .mistake-icon {
      font-size: 1.5rem;
      flex-shrink: 0;
    }

    .mistake-content h3 {
      font-size: 1.125rem;
      font-weight: 600;
      color: #dc2626;
      margin-bottom: 0.5rem;
    }

    .mistake-content p {
      color: #7f1d1d;
      line-height: 1.6;
      margin: 0;
    }

    /* 扩展练习 */
    .extensions {
      margin-bottom: 3rem;
    }

    .extensions h2 {
      font-size: 1.5rem;
      margin-bottom: 1.5rem;
      color: var(--color-text);
      font-weight: 700;
    }

    .extensions-list {
      display: grid;
      gap: 1.5rem;
    }

    .extension-item {
      display: flex;
      gap: 1rem;
      padding: 1.5rem;
      background: linear-gradient(135deg, #f0f9ff 0%, #fefefe 100%);
      border: 1px solid #bae6fd;
      border-radius: var(--radius-lg);
      transition: all 0.2s ease;
    }

    .extension-item:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.1);
    }

    .extension-icon {
      font-size: 1.5rem;
      flex-shrink: 0;
    }

    .extension-content h3 {
      font-size: 1.125rem;
      font-weight: 600;
      color: #2563eb;
      margin-bottom: 0.5rem;
    }

    .extension-content p {
      color: #1e40af;
      line-height: 1.6;
      margin: 0;
    }

    /* 导航按钮 */
    .solution-navigation {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 2.5rem 0;
      margin: 3rem 0 2rem 0;
      border-top: 2px solid var(--color-border);
      border-bottom: 2px solid var(--color-border);
    }

    .nav-back,
    .nav-course {
      padding: 0.875rem 1.75rem;
      color: var(--color-text);
      text-decoration: none;
      border-radius: var(--radius-md);
      transition: all 0.2s;
      font-weight: 600;
      border: 1px solid var(--color-border);
    }

    .nav-back:hover,
    .nav-course:hover {
      background: var(--color-bg);
      color: var(--color-primary);
      border-color: var(--color-primary);
      transform: translateY(-2px);
    }

    .nav-course {
      background: var(--color-primary);
      color: white;
      border-color: var(--color-primary);
    }

    .nav-course:hover {
      background: var(--color-primary);
      opacity: 0.9;
      color: white;
    }

    /* 按钮样式 */
    .btn {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.875rem 1.75rem;
      border-radius: var(--radius-md);
      font-weight: 600;
      text-decoration: none;
      transition: all 0.2s;
      border: none;
      cursor: pointer;
      font-size: 0.95rem;
    }

    .btn-success {
      background: var(--color-success);
      color: white;
    }

    .btn-success:hover {
      opacity: 0.9;
      transform: translateY(-1px);
    }

    .btn-success.completed {
      background: var(--color-bg-secondary);
      color: var(--color-success);
      border: 1px solid var(--color-success);
    }

    /* 进度追踪 */
    .progress-tracker {
      text-align: center;
      padding: 3rem 0;
    }

    .mark-solution-complete {
      font-size: 1.125rem;
      padding: 1.25rem 2.5rem;
    }

    /* 响应式设计 */
    @media (max-width: 768px) {
      .solution-page-wrapper {
        padding: 0 1rem;
      }

      .solution-title {
        font-size: 2.25rem;
      }

      .solution-content {
        padding: 2rem 1.5rem;
      }

      .key-takeaways {
        padding: 2rem 1.5rem;
      }

      .solution-approach {
        padding: 1.5rem;
      }

      .solution-navigation {
        flex-direction: column;
        gap: 1rem;
      }

      .mistake-item,
      .extension-item {
        padding: 1rem;
      }
    }
  </style>
</BaseLayout>