---
/**
 * 解决方案页面模板
 * 展示每日练习的参考解决方案
 */
import { getCollection } from 'astro:content'
import type { Solution, PhaseInfo } from '../../../types'
import CodeDisplay from '../../../components/CodeDisplay.astro'
import '../../../styles/global.css'

export async function getStaticPaths() {
  const solutions = await getCollection('solutions')
  const courses = await getCollection('courses')
  const exercises = await getCollection('exercises')
  const phases = await getCollection('phases')
  
  return solutions.map((solution) => {
    const course = courses.find(c => c.data.day === solution.data.day)
    const exercise = exercises.find(e => e.data.day === solution.data.day)
    const phase = phases.find(p => p.id.includes(course?.data.phase))
    
    return {
      params: { day: solution.data.day.toString() },
      props: { solution, course, exercise, phase }
    }
  })
}

const { day } = Astro.params
const { solution, course, exercise, phase } = Astro.props

const pageTitle = `解决方案 - Day ${day}: ${solution.data.exerciseTitle} | 60天Web开发课程`
const pageDescription = `Day ${day} 练习的参考解决方案：${solution.data.approach}`

// Get the Content component from the solution
const { Content } = await solution.render()
---

<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{pageTitle}</title>
  <meta name="description" content={pageDescription}>
</head>
<body>
  <div class="course-container">
    <!-- 面包屑导航 -->
    <nav class="breadcrumb" aria-label="面包屑导航">
      <ol>
        <li><a href="/">首页</a></li>
        <li><a href="/course">课程</a></li>
        <li><a href={`/course/phase-${phase.data.number}`}>{phase.data.name}</a></li>
        <li><a href={`/course/day-${day}`}>Day {day}</a></li>
        <li><a href={`/course/day-${day}/exercise`}>练习</a></li>
        <li aria-current="page">解决方案</li>
      </ol>
    </nav>

    <!-- 解决方案头部 -->
    <header class="solution-header">
      <div class="solution-meta">
        <span class="phase-badge">{phase.data.name}</span>
        <span class="solution-badge">参考解决方案</span>
      </div>
      
      <h1 class="solution-title">
        <span class="solution-label">Day {day} 解决方案</span>
        {solution.data.exerciseTitle}
      </h1>
      
      <div class="solution-approach">
        <h2>💡 解决思路</h2>
        <p>{solution.data.approach}</p>
      </div>
    </header>

    <!-- 关键要点 -->
    <section class="key-takeaways">
      <h2>🎯 关键要点</h2>
      <ul>
        {solution.data.keyTakeaways.map((takeaway) => (
          <li>{takeaway}</li>
        ))}
      </ul>
    </section>

    <!-- 解决方案内容 -->
    <article class="solution-content">
      <h2>📝 详细解释</h2>
      <Content />
    </article>

    <!-- 解决方案内容中已经包含完整代码，移除重复的代码文件部分 -->

    <!-- 常见错误 -->
    {solution.data.commonMistakes && solution.data.commonMistakes.length > 0 && (
      <section class="common-mistakes">
        <h2>⚠️ 常见错误</h2>
        <div class="mistakes-list">
          {solution.data.commonMistakes.map((mistake, index) => (
            <div class="mistake-item">
              <span class="mistake-number">{index + 1}</span>
              <p>{mistake}</p>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- 扩展练习 -->
    {solution.data.extensions && solution.data.extensions.length > 0 && (
      <section class="extensions">
        <h2>🚀 扩展练习</h2>
        <p>完成基础练习后，可以尝试以下扩展挑战：</p>
        <div class="extensions-list">
          {solution.data.extensions.map((extension) => (
            <div class="extension-item">
              <h3>{extension.title}</h3>
              <p>{extension.description}</p>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- 学习反馈 -->
    <section class="learning-feedback">
      <h2>📊 学习反馈</h2>
      <div class="feedback-options">
        <p>这个解决方案对你有帮助吗？</p>
        <div class="feedback-buttons">
          <button class="btn btn-success feedback-btn" data-feedback="helpful">
            👍 很有帮助
          </button>
          <button class="btn btn-secondary feedback-btn" data-feedback="neutral">
            😐 一般般
          </button>
          <button class="btn btn-secondary feedback-btn" data-feedback="confusing">
            😕 还是不懂
          </button>
        </div>
        <div class="feedback-message" style="display: none;">
          <p>感谢你的反馈！</p>
        </div>
      </div>
    </section>

    <!-- 导航按钮 -->
    <nav class="solution-navigation">
      <a href={`/course/day-${day}/exercise`} class="nav-back">
        ← 返回练习
      </a>
      
      <div class="nav-actions">
        <a href={`/course/day-${day}`} class="btn btn-secondary">
          回到课程
        </a>
        {parseInt(day) < 60 && (
          <a href={`/course/day-${parseInt(day) + 1}`} class="btn btn-primary">
            下一天课程 →
          </a>
        )}
      </div>
    </nav>
  </div>

  <script>
    // 智能代码块增强 - 根据代码长度决定功能
    document.querySelectorAll('.solution-content pre').forEach((pre, index) => {
      const codeBlock = pre.querySelector('code')
      if (codeBlock && codeBlock.textContent) {
        // 统计代码信息
        const codeText = codeBlock.textContent
        const lineCount = codeText.split('\n').length
        const charCount = codeText.length
        const language = pre.querySelector('code').className.match(/language-(\w+)/)?.[1] || 'html'
        
        // 创建复制按钮（所有代码块都有）
        const copyBtn = document.createElement('button')
        copyBtn.className = 'copy-code-btn'
        copyBtn.innerHTML = '<svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20 9H11C9.89543 9 9 9.89543 9 11V20C9 21.1046 9.89543 22 11 22H20C21.1046 22 22 21.1046 22 20V11C22 9.89543 21.1046 9 20 9Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M5 15H4C2.89543 15 2 14.1046 2 13V4C2 2.89543 2.89543 2 4 2H13C14.1046 2 15 2.89543 15 4V5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>复制'
        copyBtn.title = '复制代码到剪贴板'
        pre.appendChild(copyBtn)
        
        // 只有长代码块（≥50行）才显示信息栏和展开功能
        if (lineCount >= 50) {
          // 标记为长代码块，用于应用样式
          pre.classList.add('has-info-bar')
          
          // 创建代码信息栏
          const infoBar = document.createElement('div')
          infoBar.className = 'code-info-bar'
          infoBar.innerHTML = `
            <div class="code-file-info">
              <span>📄 index.${language}</span>
              <span>🔤 ${language.toUpperCase()}</span>
            </div>
            <div class="code-stats">
              <span>${lineCount} 行</span>
              <span>${(charCount / 1024).toFixed(1)}KB</span>
              <button class="code-expand-btn" data-action="expand">展开全部</button>
            </div>
          `
          
          // 将信息栏插入到代码块前面
          pre.parentNode.insertBefore(infoBar, pre)
          
          // 获取展开按钮
          const expandBtn = infoBar.querySelector('.code-expand-btn')
          
          // 展开/收起功能
          expandBtn.addEventListener('click', () => {
            const isExpanded = pre.classList.contains('expanded')
            if (isExpanded) {
              pre.classList.remove('expanded')
              expandBtn.textContent = '展开全部'
            } else {
              pre.classList.add('expanded')
              expandBtn.textContent = '收起代码'
            }
          })
        } else {
          // 短代码块：移除高度限制，保持简洁
          pre.style.maxHeight = 'none'
          pre.style.overflow = 'visible'
        }
        
        // 复制功能（所有代码块都有）
        copyBtn.addEventListener('click', async () => {
          try {
            await navigator.clipboard.writeText(codeText)
            const originalText = copyBtn.innerHTML
            copyBtn.innerHTML = '<svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20 6L9 17L4 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>已复制'
            copyBtn.classList.add('copied')
            
            setTimeout(() => {
              copyBtn.innerHTML = originalText
              copyBtn.classList.remove('copied')
            }, 2000)
          } catch (err) {
            console.error('复制失败:', err)
          }
        })
      }
    })
    
    // 学习反馈
    const feedbackBtns = document.querySelectorAll('.feedback-btn')
    const feedbackMessage = document.querySelector('.feedback-message') as HTMLElement
    
    feedbackBtns.forEach(btn => {
      btn.addEventListener('click', (e) => {
        const feedback = (e.target as HTMLElement).dataset.feedback
        
        // 保存反馈到localStorage
        const feedbackData = {
          day: Astro.params.day,
          feedback: feedback,
          timestamp: new Date().toISOString()
        }
        
        const allFeedback = JSON.parse(localStorage.getItem('solutionFeedback') || '{}')
        allFeedback[`day-${Astro.params.day}`] = feedbackData
        localStorage.setItem('solutionFeedback', JSON.stringify(allFeedback))
        
        // 显示反馈消息
        feedbackBtns.forEach(b => b.classList.remove('active'))
        ;(e.target as HTMLElement).classList.add('active')
        
        if (feedbackMessage) {
          feedbackMessage.style.display = 'block'
          
          // 根据反馈类型显示不同消息
          const messages = {
            helpful: '太好了！继续加油！🎉',
            neutral: '如果有疑问，可以重新复习课程内容。',
            confusing: '建议重新阅读课程内容，或在社区寻求帮助。'
          }
          
          feedbackMessage.innerHTML = `<p>感谢你的反馈！${messages[feedback as keyof typeof messages]}</p>`
        }
      })
    })
    
    // 恢复之前的反馈
    const savedFeedback = JSON.parse(localStorage.getItem('solutionFeedback') || '{}')
    const dayFeedback = savedFeedback[`day-${Astro.params.day}`]
    
    if (dayFeedback) {
      const btn = document.querySelector(`[data-feedback="${dayFeedback.feedback}"]`)
      if (btn) {
        btn.classList.add('active')
      }
    }
  </script>

  <style>
    /* 解决方案页面特定样式 */
    .solution-header {
      margin-bottom: var(--space-8);
    }

    .solution-meta {
      display: flex;
      align-items: center;
      gap: var(--space-3);
      margin-bottom: var(--space-4);
    }

    .solution-badge {
      background-color: var(--color-success);
      color: white;
      padding: var(--space-1) var(--space-3);
      border-radius: var(--radius-full);
      font-size: var(--text-sm);
      font-weight: 500;
    }

    .solution-label {
      color: var(--color-success);
      font-size: var(--text-xl);
      display: block;
      margin-bottom: var(--space-2);
    }

    .solution-approach {
      background-color: var(--bg-secondary);
      padding: var(--space-6);
      border-radius: var(--radius-lg);
      margin-top: var(--space-6);
    }

    .solution-approach h2 {
      margin-bottom: var(--space-3);
    }

    .key-takeaways {
      background-color: var(--bg-tertiary);
      padding: var(--space-6);
      border-radius: var(--radius-lg);
      margin-bottom: var(--space-8);
    }

    .key-takeaways ul {
      list-style-position: inside;
      color: var(--text-secondary);
    }

    .key-takeaways li {
      margin-bottom: var(--space-2);
    }

    /* 复制代码按钮样式 - 重新设计 */
    .copy-code-btn {
      position: absolute;
      top: 0.5rem;
      right: 0.5rem;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(8px);
      color: #e2e8f0;
      border: 1px solid rgba(255, 255, 255, 0.2);
      padding: 0.375rem 0.75rem;
      border-radius: 6px;
      font-size: 0.75rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      z-index: 10;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
      display: flex;
      align-items: center;
      gap: 0.25rem;
    }

    .copy-code-btn:hover {
      background: rgba(255, 255, 255, 0.15);
      border-color: rgba(255, 255, 255, 0.3);
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .copy-code-btn:active {
      transform: translateY(0);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
    }

    .copy-code-btn.copied {
      background: rgba(34, 197, 94, 0.2);
      border-color: rgba(34, 197, 94, 0.4);
      color: #4ade80;
    }

    .common-mistakes {
      background-color: var(--bg-secondary);
      padding: var(--space-6);
      border-radius: var(--radius-lg);
      margin-bottom: var(--space-8);
      border: 1px solid var(--color-warning);
    }

    .mistakes-list {
      display: flex;
      flex-direction: column;
      gap: var(--space-4);
    }

    .mistake-item {
      display: flex;
      gap: var(--space-3);
    }

    .mistake-number {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 24px;
      height: 24px;
      background-color: var(--color-warning);
      color: white;
      border-radius: var(--radius-full);
      font-size: var(--text-sm);
      font-weight: 600;
      flex-shrink: 0;
    }

    .extensions {
      margin-bottom: var(--space-8);
    }

    .extensions-list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: var(--space-4);
      margin-top: var(--space-4);
    }

    .extension-item {
      background-color: var(--bg-secondary);
      padding: var(--space-4);
      border-radius: var(--radius-lg);
      border: 1px solid var(--color-primary);
    }

    .extension-item h3 {
      color: var(--color-primary);
      margin-bottom: var(--space-2);
    }

    .extension-item p {
      color: var(--text-secondary);
      margin: 0;
    }

    /* 解决方案内容样式 */
    .solution-content {
      margin-bottom: var(--space-8);
      background: var(--bg-primary);
      padding: 2.5rem;
      border-radius: var(--radius-lg);
      box-shadow: var(--shadow-sm);
      line-height: 1.9;
    }

    /* 针对解决方案内容的代码块样式 */
    .solution-content pre {
      background-color: #1e1e1e;
      border: 1px solid var(--border-color);
      border-radius: var(--radius-md);
      padding: 1.5rem 3rem 1.5rem 1.5rem; /* 右侧增加padding为复制按钮留空间 */
      margin: 1.5rem 0;
      overflow-x: auto;
      position: relative;
      max-height: 400px;
      overflow-y: auto;
      transition: max-height 0.3s ease;
    }

    .solution-content pre.expanded {
      max-height: none;
    }

    /* 代码块信息栏 */
    .code-info-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.5rem 1rem;
      background: #2d2d2d;
      border: 1px solid var(--border-color);
      border-bottom: none;
      border-radius: var(--radius-md) var(--radius-md) 0 0;
      font-family: var(--font-mono);
      font-size: var(--text-sm);
      color: #9ca3af;
    }

    .code-info-bar + pre {
      border-radius: 0 0 var(--radius-md) var(--radius-md);
      margin-top: 0;
    }

    .code-file-info {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .code-stats {
      display: flex;
      align-items: center;
      gap: 1rem;
      font-size: var(--text-xs);
    }

    /* 展开/收起按钮 */
    .code-expand-btn {
      background: rgba(59, 130, 246, 0.8);
      color: white;
      border: none;
      padding: 0.375rem 0.75rem;
      border-radius: var(--radius-sm);
      font-size: var(--text-xs);
      cursor: pointer;
      transition: all var(--transition-fast);
      font-weight: 500;
    }

    .code-expand-btn:hover {
      background: rgba(59, 130, 246, 1);
      transform: translateY(-1px);
    }

    /* 渐变遮罩效果 - 只应用到长代码块 */
    .solution-content pre.has-info-bar:not(.expanded)::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 80px;
      background: linear-gradient(transparent, #1e1e1e);
      pointer-events: none;
      border-radius: 0 0 var(--radius-md) var(--radius-md);
    }

    .solution-content code {
      font-family: var(--font-mono);
      font-size: 0.875rem;
      line-height: 1.6;
    }

    .solution-content pre code {
      display: block;
      background: none;
      color: #d4d4d4;
      white-space: pre;
      overflow-x: visible;
    }

    .solution-content :not(pre) > code {
      background-color: var(--bg-tertiary);
      padding: 0.125rem 0.25rem;
      border-radius: var(--radius-sm);
      font-size: 0.875em;
      color: var(--color-primary);
    }

    /* 解决方案内容的其他元素样式 */
    .solution-content h2 {
      font-size: 1.75rem;
      margin-top: 2.5rem;
      margin-bottom: 1rem;
      color: var(--text-primary);
      font-weight: 600;
    }

    .solution-content h3 {
      font-size: 1.375rem;
      margin-top: 2rem;
      margin-bottom: 0.75rem;
      color: var(--text-primary);
    }

    .solution-content p {
      margin-bottom: 1.5rem;
      color: var(--text-secondary);
      line-height: 1.8;
    }

    .solution-content ul,
    .solution-content ol {
      margin-bottom: 1.5rem;
      padding-left: 2rem;
      color: var(--text-secondary);
    }

    .solution-content li {
      margin-bottom: 0.5rem;
      line-height: 1.7;
    }

    .solution-content blockquote {
      border-left: 4px solid var(--color-primary);
      padding-left: 1.5rem;
      margin: 1.5rem 0;
      color: var(--text-secondary);
      font-style: italic;
    }

    /* 代码块滚动条样式 */
    .solution-content pre::-webkit-scrollbar {
      width: 8px;
      height: 8px;
    }

    .solution-content pre::-webkit-scrollbar-track {
      background: #2d2d2d;
      border-radius: 4px;
    }

    .solution-content pre::-webkit-scrollbar-thumb {
      background: #555;
      border-radius: 4px;
    }

    .solution-content pre::-webkit-scrollbar-thumb:hover {
      background: #777;
    }

    .learning-feedback {
      background-color: var(--bg-secondary);
      padding: var(--space-6);
      border-radius: var(--radius-lg);
      margin-bottom: var(--space-8);
      text-align: center;
    }

    .feedback-buttons {
      display: flex;
      justify-content: center;
      gap: var(--space-3);
      margin: var(--space-4) 0;
    }

    .feedback-btn.active {
      outline: 2px solid var(--color-primary);
      outline-offset: 2px;
    }

    .feedback-message {
      margin-top: var(--space-4);
      color: var(--color-success);
      font-weight: 500;
    }

    .solution-navigation {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: var(--space-8);
      padding-top: var(--space-8);
      border-top: 1px solid var(--border-color);
    }

    @media (max-width: 768px) {
      .feedback-buttons {
        flex-direction: column;
      }

      .feedback-btn {
        width: 100%;
      }

      .solution-navigation {
        flex-direction: column;
        gap: var(--space-4);
      }

      .nav-actions {
        width: 100%;
        display: flex;
        flex-direction: column;
        gap: var(--space-3);
      }

      .nav-actions .btn {
        width: 100%;
      }

      .copy-code-btn {
        position: static;
        margin-top: 0.5rem;
        width: 100%;
        justify-content: center;
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(4px);
      }

      .solution-content pre {
        padding: 1rem; /* 移动端减少padding */
      }

      .code-info-bar {
        flex-direction: column;
        gap: 0.75rem;
        align-items: flex-start;
      }

      .code-stats {
        width: 100%;
        justify-content: space-between;
      }

      .code-expand-btn {
        width: auto;
        padding: 0.375rem 0.75rem;
      }
    }
  </style>
</body>
</html>