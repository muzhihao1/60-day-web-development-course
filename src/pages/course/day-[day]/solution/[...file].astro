---
/**
 * 文件查看页面
 * 用于展示解决方案中的完整代码文件
 */
import { getCollection } from 'astro:content'
import CodeDisplay from '@components/CodeDisplay.astro'
import '@styles/global.css'

export async function getStaticPaths() {
  const solutions = await getCollection('solutions')
  const courses = await getCollection('courses')
  const phases = await getCollection('phases')
  
  const paths = []
  
  // 为每个解决方案的每个文件创建路径
  solutions.forEach((solution) => {
    const course = courses.find(c => c.data.day === solution.data.day)
    const phase = phases.find(p => p.id.includes(course?.data.phase))
    
    solution.data.files.forEach((file) => {
      paths.push({
        params: { 
          day: solution.data.day.toString(),
          file: file.path
        },
        props: { 
          solution, 
          course, 
          phase,
          file,
          dayNumber: solution.data.day
        }
      })
    })
  })
  
  return paths
}

const { day, file: filePath } = Astro.params
const { solution, course, phase, file, dayNumber } = Astro.props

const pageTitle = `${file.path} - Day ${dayNumber} 解决方案 | 60天Web开发课程`
---

<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{pageTitle}</title>
  <meta name="description" content={`查看Day ${dayNumber}解决方案中的${file.path}文件`}>
</head>
<body>
  <div class="file-viewer-container">
    <!-- 面包屑导航 -->
    <nav class="breadcrumb" aria-label="面包屑导航">
      <ol>
        <li><a href="/">首页</a></li>
        <li><a href="/course">课程</a></li>
        <li><a href={`/course/phase-${phase.data.number}`}>{phase.data.name}</a></li>
        <li><a href={`/course/day-${day}`}>Day {day}</a></li>
        <li><a href={`/course/day-${day}/exercise`}>练习</a></li>
        <li><a href={`/course/day-${day}/solution`}>解决方案</a></li>
        <li aria-current="page">{file.path}</li>
      </ol>
    </nav>

    <!-- 文件查看器头部 -->
    <header class="file-viewer-header">
      <h1 class="file-viewer-title">
        <span class="file-icon">📄</span>
        {file.path}
      </h1>
      {file.description && (
        <p class="file-description">{file.description}</p>
      )}
    </header>

    <!-- 代码展示 -->
    <div class="file-content">
      <div class="file-notice">
        <p>⚠️ 注意：此功能正在开发中。完整的代码文件将在内容迁移完成后显示。</p>
        <p>当前这是一个占位页面，用于展示文件查看功能的界面设计。</p>
      </div>
      
      <!-- 实际使用时应该显示真实的代码内容 -->
      <CodeDisplay 
        code={`// ${file.path}\n// 这里将显示完整的代码文件内容\n\n// 示例代码：\nfunction example() {\n  console.log('Hello, World!');\n}\n\nexport default example;`}
        language={file.language}
        filename={file.path}
        description={file.description}
        maxLines={50}
      />
    </div>

    <!-- 文件操作 -->
    <div class="file-actions">
      <button class="btn btn-primary download-btn">
        ⬇️ 下载文件
      </button>
      <button class="btn btn-secondary raw-btn">
        📋 查看原始内容
      </button>
    </div>

    <!-- 导航按钮 -->
    <nav class="file-navigation">
      <a href={`/course/day-${day}/solution`} class="nav-back">
        ← 返回解决方案
      </a>
    </nav>
  </div>

  <style>
    /* 文件查看器样式 */
    .file-viewer-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: var(--space-8) var(--space-6);
      min-height: 100vh;
    }

    .file-viewer-header {
      margin-bottom: var(--space-8);
      padding-bottom: var(--space-6);
      border-bottom: 2px solid var(--border-color);
    }

    .file-viewer-title {
      display: flex;
      align-items: center;
      gap: var(--space-3);
      font-size: var(--text-3xl);
      font-weight: 700;
      color: var(--text-primary);
      font-family: var(--font-mono);
      margin-bottom: var(--space-3);
    }

    .file-icon {
      font-size: var(--text-4xl);
    }

    .file-description {
      font-size: var(--text-lg);
      color: var(--text-secondary);
      margin-top: var(--space-3);
    }

    .file-content {
      margin-bottom: var(--space-8);
    }

    .file-notice {
      background-color: var(--color-warning);
      color: white;
      padding: var(--space-6);
      border-radius: var(--radius-lg);
      margin-bottom: var(--space-6);
    }

    .file-notice p {
      margin: 0;
      margin-bottom: var(--space-2);
    }

    .file-notice p:last-child {
      margin-bottom: 0;
    }

    .file-actions {
      display: flex;
      gap: var(--space-4);
      margin-bottom: var(--space-8);
      padding: var(--space-6);
      background-color: var(--bg-secondary);
      border-radius: var(--radius-lg);
      border: 1px solid var(--border-color);
    }

    .download-btn,
    .raw-btn {
      padding: var(--space-3) var(--space-6);
    }

    .file-navigation {
      padding-top: var(--space-8);
      border-top: 1px solid var(--border-color);
    }

    .nav-back {
      display: inline-flex;
      align-items: center;
      gap: var(--space-2);
      color: var(--text-secondary);
      font-weight: 500;
      padding: var(--space-3) var(--space-4);
      background-color: var(--bg-secondary);
      border-radius: var(--radius-md);
      transition: all var(--transition-fast);
    }

    .nav-back:hover {
      background-color: var(--bg-tertiary);
      color: var(--text-primary);
      text-decoration: none;
    }

    /* 响应式设计 */
    @media (max-width: 768px) {
      .file-viewer-container {
        padding: var(--space-6) var(--space-4);
      }

      .file-viewer-title {
        font-size: var(--text-2xl);
      }

      .file-actions {
        flex-direction: column;
        padding: var(--space-4);
      }

      .download-btn,
      .raw-btn {
        width: 100%;
      }
    }
  </style>

  <script>
    // 下载功能（占位）
    document.querySelector('.download-btn')?.addEventListener('click', () => {
      alert('下载功能即将推出！当前为演示版本。')
    })
    
    // 查看原始内容（占位）
    document.querySelector('.raw-btn')?.addEventListener('click', () => {
      alert('原始内容查看功能即将推出！')
    })
  </script>
</body>
</html>