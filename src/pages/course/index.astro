---
/**
 * 课程总览页面
 * 展示所有课程阶段和学习进度
 */
import { getCollection } from 'astro:content'
import type { PhaseInfo } from '../../types'
import '../../styles/global.css'

// 获取所有阶段和课程数据
const phases = await getCollection('phases')
const courses = await getCollection('courses')

// 按阶段组织课程
const phaseData = phases.map(phase => {
  const phaseCourses = courses
    .filter(course => course.data.phase === phase.id)
    .sort((a, b) => a.data.day - b.data.day)
  
  return {
    phase: phase.data,
    phaseId: phase.id,
    courses: phaseCourses,
    totalDays: phaseCourses.length
  }
}).sort((a, b) => a.phase.number - b.phase.number)

const totalDays = courses.length
const pageTitle = '课程总览 | 40天Web开发课程'
const pageDescription = '从零基础到React全栈开发，40天系统学习Web开发的完整路径'
---

<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{pageTitle}</title>
  <meta name="description" content={pageDescription}>
</head>
<body>
  <div class="overview-container">
    <!-- 页面头部 -->
    <header class="overview-header">
      <h1 class="overview-title">40天Web开发课程</h1>
      <p class="overview-subtitle">从零基础到全栈开发的系统学习路径</p>
      
      <!-- 学习进度概览 -->
      <div class="progress-overview">
        <div class="progress-stats">
          <div class="stat-item">
            <span class="stat-number" id="completed-days">0</span>
            <span class="stat-label">已完成</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">{totalDays}</span>
            <span class="stat-label">总天数</span>
          </div>
          <div class="stat-item">
            <span class="stat-number" id="progress-percentage">0%</span>
            <span class="stat-label">完成度</span>
          </div>
        </div>
        
        <div class="overall-progress">
          <div class="progress-bar">
            <div class="progress-fill" id="overall-progress-fill" style="width: 0%"></div>
          </div>
        </div>
        
        <div class="progress-actions">
          <a href="/course/progress" class="btn btn-primary">
            查看详细进度
          </a>
        </div>
      </div>
    </header>

    <!-- 学习路径介绍 -->
    <section class="learning-path">
      <h2>🎯 学习路径</h2>
      <div class="path-intro">
        <p>本课程分为5个阶段，每个阶段都有明确的学习目标和实践项目：</p>
        <ol class="path-list">
          <li><strong>现代Web基础</strong>：掌握开发环境、HTML5、CSS3和Tailwind</li>
          <li><strong>JavaScript精通</strong>：深入学习现代JavaScript和TypeScript</li>
          <li><strong>React开发</strong>：构建交互式单页应用</li>
          <li><strong>后端开发</strong>：Node.js服务端开发和数据库</li>
          <li><strong>全栈部署</strong>：项目部署和DevOps实践</li>
        </ol>
      </div>
    </section>

    <!-- 课程阶段卡片 -->
    <section class="phases-section">
      <h2>📚 课程内容</h2>
      <div class="phases-grid">
        {phaseData.map(({ phase, phaseId, courses, totalDays }) => (
          <div class="phase-card" data-phase={phaseId}>
            <div class="phase-header">
              <span class="phase-icon">{phase.icon}</span>
              <h3 class="phase-title">
                阶段 {phase.number}: {phase.name}
              </h3>
            </div>
            
            <p class="phase-description">{phase.description}</p>
            
            <div class="phase-meta">
              <span class="phase-days">Day {phase.startDay} - Day {phase.endDay}</span>
              <span class="phase-duration">{totalDays} 天</span>
            </div>
            
            <div class="phase-progress">
              <div class="progress-bar">
                <div 
                  class="progress-fill phase-progress-fill" 
                  data-phase={phaseId}
                  style="width: 0%"
                ></div>
              </div>
              <span class="phase-progress-text" data-phase={phaseId}>0/{totalDays} 完成</span>
            </div>
            
            <details class="phase-details">
              <summary>查看课程列表</summary>
              <ul class="course-list">
                {courses.map(course => (
                  <li class="course-item" data-day={course.data.day}>
                    <a href={`/course/day-${course.data.day}`}>
                      <span class="day-badge">Day {course.data.day}</span>
                      <span class="course-name">{course.data.title}</span>
                      <span class="completion-check" data-day={course.data.day}>⭕</span>
                    </a>
                  </li>
                ))}
              </ul>
            </details>
            
            <a href={`/course/day-${phase.startDay}`} class="btn btn-primary phase-start">
              开始学习
            </a>
          </div>
        ))}
      </div>
    </section>

    <!-- 学习建议 -->
    <section class="study-tips">
      <h2>💡 学习建议</h2>
      <div class="tips-grid">
        <div class="tip-card">
          <h3>📅 制定计划</h3>
          <p>每天安排1-2小时学习时间，保持稳定的学习节奏。周末可以用来复习和完成项目。</p>
        </div>
        <div class="tip-card">
          <h3>✍️ 动手实践</h3>
          <p>不要只看不练，每个示例都要亲自敲一遍代码。遇到问题先尝试自己解决。</p>
        </div>
        <div class="tip-card">
          <h3>📝 做好笔记</h3>
          <p>记录重要概念和常见错误，建立自己的知识体系。定期回顾巩固所学内容。</p>
        </div>
        <div class="tip-card">
          <h3>🤝 交流分享</h3>
          <p>加入学习社区，与其他学习者交流经验。分享你的学习成果和遇到的问题。</p>
        </div>
      </div>
    </section>

    <!-- 快速导航 -->
    <section class="quick-nav">
      <h2>🚀 快速开始</h2>
      <div class="nav-buttons">
        <a href="/course/day-1" class="btn btn-primary btn-large">
          从第一天开始
        </a>
        <button class="btn btn-secondary btn-large" id="continue-learning">
          继续上次学习
        </button>
        <button class="btn btn-secondary btn-large" id="reset-progress">
          重置进度
        </button>
      </div>
    </section>
  </div>

  <script define:vars={{ totalDays, phaseDataForScript: phaseData.map(p => ({
    phaseId: p.phaseId,
    startDay: p.phase.startDay,
    endDay: p.phase.endDay,
    totalDays: p.totalDays
  })) }}>
    // 获取已完成的课程
    const completedDays = JSON.parse(localStorage.getItem('completedDays') || '[]')
    
    // 更新整体进度
    function updateOverallProgress() {
      const completedCount = completedDays.length
      const percentage = Math.round((completedCount / totalDays) * 100)
      
      document.getElementById('completed-days')!.textContent = completedCount.toString()
      document.getElementById('progress-percentage')!.textContent = `${percentage}%`
      
      const progressFill = document.getElementById('overall-progress-fill') as HTMLElement
      progressFill.style.width = `${percentage}%`
    }
    
    // 更新阶段进度
    function updatePhaseProgress() {
      const phaseData = phaseDataForScript
      
      phaseData.forEach(phase => {
        const phaseCompleted = completedDays.filter((day: string) => {
          const dayNum = parseInt(day)
          return dayNum >= phase.startDay && dayNum <= phase.endDay
        }).length
        
        const percentage = Math.round((phaseCompleted / phase.totalDays) * 100)
        
        const progressFill = document.querySelector(`.phase-progress-fill[data-phase="${phase.phaseId}"]`) as HTMLElement
        const progressText = document.querySelector(`.phase-progress-text[data-phase="${phase.phaseId}"]`) as HTMLElement
        
        if (progressFill) progressFill.style.width = `${percentage}%`
        if (progressText) progressText.textContent = `${phaseCompleted}/${phase.totalDays} 完成`
      })
    }
    
    // 更新课程列表的完成状态
    function updateCourseList() {
      completedDays.forEach((day: string) => {
        const checkmark = document.querySelector(`.completion-check[data-day="${day}"]`)
        if (checkmark) {
          checkmark.textContent = '✅'
        }
        
        const courseItem = document.querySelector(`.course-item[data-day="${day}"]`)
        if (courseItem) {
          courseItem.classList.add('completed')
        }
      })
    }
    
    // 继续学习按钮
    document.getElementById('continue-learning')?.addEventListener('click', () => {
      if (completedDays.length === 0) {
        window.location.href = '/course/day-1'
      } else {
        const lastCompleted = Math.max(...completedDays.map((d: string) => parseInt(d)))
        const nextDay = lastCompleted < totalDays ? lastCompleted + 1 : lastCompleted
        window.location.href = `/course/day-${nextDay}`
      }
    })
    
    // 重置进度
    document.getElementById('reset-progress')?.addEventListener('click', () => {
      if (confirm('确定要重置所有学习进度吗？此操作不可撤销。')) {
        localStorage.removeItem('completedDays')
        localStorage.removeItem('exerciseProgress')
        localStorage.removeItem('solutionFeedback')
        location.reload()
      }
    })
    
    // 初始化页面
    updateOverallProgress()
    updatePhaseProgress()
    updateCourseList()
  </script>

  <style>
    /* 总览页面特定样式 */
    .overview-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: var(--space-8) var(--space-4);
    }

    .overview-header {
      text-align: center;
      margin-bottom: var(--space-12);
    }

    .overview-title {
      font-size: var(--text-5xl);
      margin-bottom: var(--space-3);
    }

    .overview-subtitle {
      font-size: var(--text-xl);
      color: var(--text-secondary);
      margin-bottom: var(--space-8);
    }

    .progress-overview {
      max-width: 600px;
      margin: 0 auto;
    }

    .progress-stats {
      display: flex;
      justify-content: space-around;
      margin-bottom: var(--space-4);
    }

    .stat-item {
      text-align: center;
    }

    .stat-number {
      display: block;
      font-size: var(--text-3xl);
      font-weight: 700;
      color: var(--color-primary);
    }

    .stat-label {
      font-size: var(--text-sm);
      color: var(--text-secondary);
    }

    .overall-progress {
      background-color: var(--bg-secondary);
      padding: var(--space-4);
      border-radius: var(--radius-lg);
    }

    .learning-path {
      margin-bottom: var(--space-12);
    }

    .path-intro {
      background-color: var(--bg-secondary);
      padding: var(--space-6);
      border-radius: var(--radius-lg);
    }

    .path-list {
      margin-top: var(--space-4);
      margin-left: var(--space-6);
    }

    .path-list li {
      margin-bottom: var(--space-2);
    }

    .phases-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: var(--space-6);
      margin-top: var(--space-6);
    }

    .phase-card {
      background-color: var(--bg-primary);
      border: 1px solid var(--border-color);
      border-radius: var(--radius-lg);
      padding: var(--space-6);
      transition: box-shadow var(--transition-fast);
    }

    .phase-card:hover {
      box-shadow: var(--shadow-lg);
    }

    .phase-header {
      display: flex;
      align-items: center;
      gap: var(--space-3);
      margin-bottom: var(--space-4);
    }

    .phase-icon {
      font-size: var(--text-3xl);
    }

    .phase-title {
      margin: 0;
      font-size: var(--text-xl);
    }

    .phase-description {
      color: var(--text-secondary);
      margin-bottom: var(--space-4);
    }

    .phase-meta {
      display: flex;
      justify-content: space-between;
      margin-bottom: var(--space-4);
      color: var(--text-tertiary);
      font-size: var(--text-sm);
    }

    .phase-progress {
      margin-bottom: var(--space-4);
    }

    .phase-progress-text {
      display: block;
      text-align: right;
      margin-top: var(--space-2);
      font-size: var(--text-sm);
      color: var(--text-secondary);
    }

    .phase-details {
      margin-bottom: var(--space-4);
    }

    .phase-details summary {
      cursor: pointer;
      color: var(--color-primary);
      font-weight: 500;
      padding: var(--space-2) 0;
    }

    .course-list {
      list-style: none;
      margin-top: var(--space-3);
    }

    .course-item {
      margin-bottom: var(--space-2);
    }

    .course-item a {
      display: flex;
      align-items: center;
      gap: var(--space-3);
      padding: var(--space-2);
      border-radius: var(--radius-md);
      transition: background-color var(--transition-fast);
    }

    .course-item a:hover {
      background-color: var(--bg-secondary);
      text-decoration: none;
    }

    .course-item.completed a {
      color: var(--text-tertiary);
    }

    .day-badge {
      background-color: var(--bg-tertiary);
      padding: var(--space-1) var(--space-2);
      border-radius: var(--radius-full);
      font-size: var(--text-xs);
      font-weight: 500;
      min-width: 50px;
      text-align: center;
    }

    .course-name {
      flex: 1;
      color: var(--text-primary);
    }

    .completion-check {
      font-size: var(--text-sm);
    }

    .phase-start {
      width: 100%;
    }

    .study-tips {
      margin-bottom: var(--space-12);
    }

    .tips-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: var(--space-6);
      margin-top: var(--space-6);
    }

    .tip-card {
      background-color: var(--bg-secondary);
      padding: var(--space-6);
      border-radius: var(--radius-lg);
    }

    .tip-card h3 {
      margin-bottom: var(--space-3);
    }

    .tip-card p {
      margin: 0;
      color: var(--text-secondary);
    }

    .quick-nav {
      text-align: center;
    }

    .nav-buttons {
      display: flex;
      justify-content: center;
      gap: var(--space-4);
      margin-top: var(--space-6);
      flex-wrap: wrap;
    }

    .btn-large {
      padding: var(--space-4) var(--space-8);
      font-size: var(--text-lg);
    }

    @media (max-width: 768px) {
      .overview-title {
        font-size: var(--text-3xl);
      }

      .phases-grid {
        grid-template-columns: 1fr;
      }

      .tips-grid {
        grid-template-columns: 1fr;
      }

      .nav-buttons {
        flex-direction: column;
      }

      .btn-large {
        width: 100%;
      }
    }

    /* Progress Actions */
    .progress-actions {
      margin-top: 1.5rem;
      text-align: center;
    }

    .btn {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.75rem 1.5rem;
      border-radius: var(--radius-md);
      font-weight: 500;
      text-decoration: none;
      transition: all 0.2s;
      border: none;
      cursor: pointer;
    }

    .btn-primary {
      background: var(--color-primary);
      color: white;
    }

    .btn-primary:hover {
      background: var(--color-primary);
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(66, 184, 131, 0.3);
    }
  </style>
</body>
</html>