---
import BaseLayout from '@layouts/BaseLayout.astro';
import { phases } from '@lib/navigation';

const title = '40天现代Web开发课程';
const description = '从零开始，系统学习现代Web开发技术栈';

// Define the code example with proper formatting
const codeExample = `// 你的Web开发之旅从这里开始
function startLearning() {
  const skills = [
    'HTML5', 'CSS3', 'JavaScript',
    'React', 'Node.js', 'TypeScript'
  ];
  
  return skills.map(skill => 
    master(skill)
  );
}`;
---

<BaseLayout title={title} description={description} showProgress={false}>
  <!-- Hero Section -->
  <section class="hero">
    <div class="hero-content">
      <h1 class="hero-title">
        40天掌握
        <span class="gradient-text">现代Web开发</span>
      </h1>
      <p class="hero-description">
        从零基础到全栈工程师的系统化学习路径
      </p>
      <div class="hero-actions">
        <a href="/course/day-1" class="btn btn-primary cta-main">
          <span>开始学习</span>
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
          </svg>
          <span class="cta-pulse"></span>
        </a>
        <a href="#curriculum" class="btn btn-secondary">
          查看课程大纲
        </a>
      </div>
      
      <div class="hero-stats">
        <div class="stat">
          <div class="stat-value">40</div>
          <div class="stat-label">天课程</div>
        </div>
        <div class="stat">
          <div class="stat-value">3</div>
          <div class="stat-label">学习阶段</div>
        </div>
        <div class="stat">
          <div class="stat-value">10+</div>
          <div class="stat-label">实战项目</div>
        </div>
      </div>
    </div>
    
    <div class="hero-visual">
      <div class="hero-features">
        <div class="feature-item">
          <div class="feature-icon">🎯</div>
          <div class="feature-content">
            <h3>结构化学习路径</h3>
            <p>每天1-2小时，循序渐进掌握全栈技能</p>
          </div>
        </div>
        <div class="feature-item">
          <div class="feature-icon">💼</div>
          <div class="feature-content">
            <h3>项目驱动教学</h3>
            <p>10+实战项目，构建真实作品集</p>
          </div>
        </div>
        <div class="feature-item">
          <div class="feature-icon">🚀</div>
          <div class="feature-content">
            <h3>即学即用</h3>
            <p>注重实践，每天都有可见进步</p>
          </div>
        </div>
      </div>
      <div class="testimonial-card">
        <p class="testimonial-text">"这门课程帮助我在2个月内从零基础成功转行前端开发，现在已经入职心仪的公司！"</p>
        <div class="testimonial-author">
          <img src="/avatars/student-1.jpg" alt="学员头像" class="author-avatar" />
          <div>
            <p class="author-name">张明</p>
            <p class="author-title">前端开发工程师 @字节跳动</p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Features Section -->
  <section class="features">
    <h2 class="section-title">为什么选择这门课程？</h2>
    <div class="features-grid">
      <div class="feature-card">
        <div class="feature-icon">📚</div>
        <h3>系统化课程设计</h3>
        <p>从基础到高级，循序渐进的学习路径，确保知识体系完整</p>
      </div>
      <div class="feature-card">
        <div class="feature-icon">💻</div>
        <h3>实战项目驱动</h3>
        <p>每个阶段都有实际项目，学以致用，积累作品集</p>
      </div>
      <div class="feature-card">
        <div class="feature-icon">🚀</div>
        <h3>现代技术栈</h3>
        <p>涵盖最新的Web开发技术，与行业需求保持同步</p>
      </div>
      <div class="feature-card">
        <div class="feature-icon">🎯</div>
        <h3>清晰学习路径</h3>
        <p>每日明确的学习目标，让你知道该学什么、怎么学</p>
      </div>
    </div>
  </section>

  <!-- Curriculum Section -->
  <section id="curriculum" class="curriculum">
    <h2 class="section-title">课程大纲</h2>
    <div class="phases-timeline">
      {phases.map((phase, index) => (
        <div class="phase-card">
          <div class="phase-number">阶段 {phase.id}</div>
          <div class="phase-content">
            <div class="phase-header">
              <span class="phase-icon">{phase.icon}</span>
              <h3 class="phase-title">{phase.title}</h3>
            </div>
            <p class="phase-description">{phase.description}</p>
            <div class="phase-meta">
              <span class="phase-duration">Day {phase.days[0]}-{phase.days[phase.days.length - 1]}</span>
              <span class="phase-count">{phase.days.length} 天</span>
            </div>
            <a href={`/course/day-${phase.days[0]}`} class="phase-link">
              开始学习 →
            </a>
          </div>
          {index < phases.length - 1 && <div class="phase-connector" />}
        </div>
      ))}
    </div>
  </section>

  <!-- CTA Section -->
  <section class="cta">
    <div class="cta-content">
      <h2>准备好开始你的Web开发之旅了吗？</h2>
      <p>现在就开始，40天后成为一名合格的Web开发者</p>
      <a href="/course/day-1" class="btn btn-primary btn-large">
        立即开始学习
      </a>
    </div>
  </section>

  <!-- Floating Action Button for Mobile -->
  <a href="/course/day-1" class="floating-cta" aria-label="开始学习">
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M9 5l7 7-7 7" />
    </svg>
    <span class="floating-text">开始</span>
  </a>
</BaseLayout>

<style>
  /* Hero Section */
  .hero {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
    min-height: 80vh;
    padding: 4rem 0;
  }

  .hero-title {
    font-size: 3.5rem;
    font-weight: 700;
    line-height: 1.2;
    margin-bottom: 1.5rem;
    color: var(--color-text);
  }

  .gradient-text {
    background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-accent) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .hero-description {
    font-size: 1.25rem;
    color: var(--color-text-secondary);
    margin-bottom: 2rem;
  }

  .hero-actions {
    display: flex;
    gap: 1rem;
    margin-bottom: 3rem;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border-radius: var(--radius-md);
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s;
  }

  .btn-primary {
    background: var(--color-primary);
    color: white;
    box-shadow: 0 4px 14px rgba(66, 184, 131, 0.4);
    font-size: 1.25rem;
    padding: 1.25rem 2.5rem;
    font-weight: 600;
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .btn-primary::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
    transform: translate(-50%, -50%);
    transition: width 0.4s ease, height 0.4s ease;
  }

  .btn-primary:hover {
    background: var(--color-primary-dark);
    transform: translateY(-3px);
    box-shadow: 0 16px 32px rgba(66, 184, 131, 0.45);
  }

  .btn-primary:hover::before {
    width: 300px;
    height: 300px;
  }

  .btn-primary:active {
    transform: translateY(-1px);
    box-shadow: 0 8px 16px rgba(66, 184, 131, 0.35);
  }

  .btn-primary svg {
    transition: transform 0.3s ease;
  }

  .btn-primary:hover svg {
    transform: translateX(4px);
  }

  /* Enhanced CTA Button */
  .cta-main {
    position: relative;
    z-index: 1;
  }

  .cta-pulse {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    border-radius: var(--radius-md);
    background: var(--color-primary);
    transform: translate(-50%, -50%);
    z-index: -1;
    opacity: 0.5;
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.5;
    }
    50% {
      transform: translate(-50%, -50%) scale(1.05);
      opacity: 0.2;
    }
    100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.5;
    }
  }

  .btn-secondary {
    background: var(--color-bg-secondary);
    color: var(--color-text);
    border: 1px solid var(--color-border);
  }

  .btn-secondary:hover {
    background: var(--color-border);
  }

  .btn-large {
    padding: 1rem 2rem;
    font-size: 1.125rem;
  }

  .hero-stats {
    display: flex;
    gap: 3rem;
  }

  .stat {
    text-align: center;
  }

  .stat-value {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-primary);
    animation: countUp 1s ease-out;
  }
  
  @keyframes countUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .stat-label {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
  }

  /* Hero Visual Enhancements */
  .hero-features {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .feature-item {
    display: flex;
    gap: 1rem;
    padding: 1rem;
    background: var(--color-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    transition: all 0.3s;
  }

  .feature-item:hover {
    transform: translateX(4px);
    border-color: var(--color-primary);
    box-shadow: var(--shadow-md);
  }

  .feature-icon {
    font-size: 2rem;
    flex-shrink: 0;
  }

  .feature-content h3 {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--color-text);
    margin-bottom: 0.25rem;
  }

  .feature-content p {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    line-height: 1.5;
  }

  /* Testimonial Card */
  .testimonial-card {
    background: var(--color-bg);
    border: 1px solid var(--color-primary);
    border-radius: var(--radius-lg);
    padding: 1.5rem;
    position: relative;
    overflow: hidden;
  }

  .testimonial-card::before {
    content: '"';
    position: absolute;
    top: -20px;
    left: 20px;
    font-size: 80px;
    color: var(--color-primary);
    opacity: 0.1;
  }

  .testimonial-text {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--color-text);
    margin-bottom: 1rem;
    font-style: italic;
  }

  .testimonial-author {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .author-avatar {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background: var(--color-bg-secondary);
  }

  .author-name {
    font-weight: 600;
    color: var(--color-text);
    margin-bottom: 0.125rem;
  }

  .author-title {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
  }

  /* Features Section */
  .features {
    padding: 4rem 0;
  }

  .section-title {
    font-size: 2.5rem;
    font-weight: 700;
    text-align: center;
    margin-bottom: 3rem;
    color: var(--color-text);
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
  }

  .feature-card {
    background: var(--color-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: 2rem;
    text-align: center;
    transition: all 0.3s;
  }

  .feature-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg);
  }

  .feature-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  .feature-card h3 {
    font-size: 1.25rem;
    margin-bottom: 0.75rem;
    color: var(--color-text);
  }

  .feature-card p {
    color: var(--color-text-secondary);
    line-height: 1.6;
  }

  /* Curriculum Section */
  .curriculum {
    padding: 4rem 0;
    background: var(--color-bg);
  }

  .phases-timeline {
    max-width: 800px;
    margin: 0 auto;
  }

  .phase-card {
    display: flex;
    gap: 2rem;
    margin-bottom: 3rem;
    position: relative;
  }

  .phase-number {
    flex-shrink: 0;
    width: 100px;
    height: 100px;
    background: var(--color-primary);
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 700;
    font-size: 0.875rem;
  }

  .phase-content {
    flex: 1;
    background: var(--color-bg-secondary);
    border-radius: var(--radius-lg);
    padding: 1.5rem;
  }

  .phase-header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.75rem;
  }

  .phase-icon {
    font-size: 1.5rem;
  }

  .phase-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color-text);
  }

  .phase-description {
    color: var(--color-text-secondary);
    margin-bottom: 1rem;
  }

  .phase-meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: var(--color-text-secondary);
  }

  .phase-link {
    color: var(--color-primary);
    text-decoration: none;
    font-weight: 500;
  }

  .phase-link:hover {
    text-decoration: underline;
  }

  .phase-connector {
    position: absolute;
    left: 50px;
    top: 100px;
    width: 2px;
    height: calc(100% + 1rem);
    background: var(--color-border);
  }

  /* CTA Section */
  .cta {
    padding: 4rem 0;
    text-align: center;
  }

  .cta-content h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
    color: var(--color-text);
  }

  .cta-content p {
    font-size: 1.125rem;
    color: var(--color-text-secondary);
    margin-bottom: 2rem;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .hero {
      grid-template-columns: 1fr;
      gap: 2rem;
      min-height: auto;
      padding: 2rem 0;
    }

    .hero-visual {
      display: none; /* 移动端隐藏视觉元素，专注内容 */
    }

    .hero-title {
      font-size: 2rem;
      text-align: center;
    }
    
    .hero-description {
      text-align: center;
    }

    .hero-actions {
      flex-direction: column;
      align-items: center;
    }
    
    .btn {
      width: 100%;
      justify-content: center;
    }

    .hero-stats {
      justify-content: space-around;
      gap: 1rem;
    }
    
    .stat-value {
      font-size: 2rem;
    }

    .phase-card {
      flex-direction: column;
      align-items: center;
      text-align: center;
    }

    .phase-connector {
      left: 50%;
      transform: translateX(-50%);
    }
    
    .features-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .section-title {
      font-size: 2rem;
    }
  }

  /* Floating Action Button */
  .floating-cta {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    width: 64px;
    height: 64px;
    background: var(--color-primary);
    color: white;
    border-radius: 50%;
    display: none;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 16px rgba(66, 184, 131, 0.4);
    text-decoration: none;
    transition: all 0.3s ease;
    z-index: 100;
    overflow: hidden;
  }

  .floating-cta:hover {
    transform: scale(1.1);
    box-shadow: 0 8px 24px rgba(66, 184, 131, 0.5);
    width: auto;
    padding: 0 1.5rem;
    border-radius: 32px;
  }

  .floating-cta svg {
    width: 28px;
    height: 28px;
    transition: transform 0.3s ease;
  }

  .floating-cta:hover svg {
    transform: translateX(-4px);
  }

  .floating-text {
    max-width: 0;
    overflow: hidden;
    white-space: nowrap;
    transition: max-width 0.3s ease, margin-left 0.3s ease;
    font-weight: 600;
  }

  .floating-cta:hover .floating-text {
    max-width: 100px;
    margin-left: 0.5rem;
  }

  /* Show only on mobile */
  @media (max-width: 768px) {
    .floating-cta {
      display: flex;
    }
  }
</style>