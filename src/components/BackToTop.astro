---
/**
 * Back to Top Button Component
 * Shows a floating button to scroll back to top when user scrolls down
 */
---

<button 
  id="back-to-top" 
  class="back-to-top" 
  aria-label="返回顶部"
  title="返回顶部"
>
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M7 14L12 9L17 14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>
</button>

<style>
  .back-to-top {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    width: 48px;
    height: 48px;
    background: var(--color-primary);
    color: white;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transform: translateY(20px);
    transition: all 0.3s ease;
    z-index: 1000;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .back-to-top:hover {
    background: var(--color-primary);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
  }

  .back-to-top:active {
    transform: translateY(0);
  }

  .back-to-top.visible {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .back-to-top svg {
    width: 20px;
    height: 20px;
  }

  /* Mobile adjustments */
  @media (max-width: 768px) {
    .back-to-top {
      bottom: 1.5rem;
      right: 1.5rem;
      width: 44px;
      height: 44px;
    }
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    .back-to-top {
      transition: opacity 0.2s ease;
    }
  }

  /* Dark mode adjustments */
  :global(.dark) .back-to-top {
    background: var(--color-primary);
    box-shadow: 0 4px 12px rgba(66, 184, 131, 0.3);
  }

  :global(.dark) .back-to-top:hover {
    box-shadow: 0 6px 20px rgba(66, 184, 131, 0.4);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const backToTopButton = document.getElementById('back-to-top')
    if (!backToTopButton) return

    let isScrolling = false

    // Show/hide button based on scroll position
    const toggleButton = () => {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop
      
      if (scrollTop > 300) {
        backToTopButton.classList.add('visible')
      } else {
        backToTopButton.classList.remove('visible')
      }
    }

    // Smooth scroll to top
    const scrollToTop = () => {
      if (isScrolling) return
      
      isScrolling = true
      
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      })
      
      // Reset scrolling flag after animation
      setTimeout(() => {
        isScrolling = false
      }, 1000)
    }

    // Throttled scroll handler
    let scrollTimer: number
    const handleScroll = () => {
      if (scrollTimer) {
        clearTimeout(scrollTimer)
      }
      
      scrollTimer = setTimeout(() => {
        toggleButton()
      }, 10)
    }

    // Event listeners
    window.addEventListener('scroll', handleScroll, { passive: true })
    backToTopButton.addEventListener('click', scrollToTop)

    // Initial check
    toggleButton()
  })
</script>